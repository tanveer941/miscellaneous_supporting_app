# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class Repo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsRepo(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Repo()
        x.Init(buf, n + offset)
        return x

    # Repo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Repo
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Repo
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Repo
    def FullName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Repo
    def Owner(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .User import User
            obj = User()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Repo
    def HtmlUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Repo
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Repo
    def Private(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Repo
    def DefaultBranch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Repo
    def Watchers(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def RepoStart(builder): builder.StartObject(9)
def RepoAddId(builder, id): builder.PrependInt64Slot(0, id, 0)
def RepoAddName(builder, name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def RepoAddFullName(builder, fullName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(fullName), 0)
def RepoAddOwner(builder, owner): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(owner), 0)
def RepoAddHtmlUrl(builder, htmlUrl): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(htmlUrl), 0)
def RepoAddDescription(builder, description): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)
def RepoAddPrivate(builder, private): builder.PrependBoolSlot(6, private, 0)
def RepoAddDefaultBranch(builder, defaultBranch): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(defaultBranch), 0)
def RepoAddWatchers(builder, watchers): builder.PrependInt64Slot(8, watchers, 0)
def RepoEnd(builder): return builder.EndObject()
