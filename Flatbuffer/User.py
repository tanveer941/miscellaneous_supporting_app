# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class User(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsUser(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = User()
        x.Init(buf, n + offset)
        return x

    # User
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # User
    def Login(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # User
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # User
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # User
    def SiteAdmin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserStart(builder): builder.StartObject(4)
def UserAddLogin(builder, login): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(login), 0)
def UserAddId(builder, id): builder.PrependInt64Slot(1, id, 0)
def UserAddType(builder, type): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)
def UserAddSiteAdmin(builder, siteAdmin): builder.PrependBoolSlot(3, siteAdmin, 0)
def UserEnd(builder): return builder.EndObject()
