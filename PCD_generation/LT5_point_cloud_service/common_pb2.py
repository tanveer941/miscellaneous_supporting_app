# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common.proto',
  package='common',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x63ommon.proto\x12\x06\x63ommon\")\n\rConfigRequest\x12\x18\n\x10requestInputType\x18\x01 \x01(\t\"`\n\x0e\x43onfigResponse\x12\x19\n\x11recievedInputType\x18\x01 \x01(\t\x12\x17\n\x0flabelSchemaData\x18\x02 \x01(\x0c\x12\x1a\n\x12labelCorrectorInfo\x18\x03 \x01(\x0c\"1\n\x12\x44\x65vicesDataRequest\x12\x1b\n\x13requiredDevicesData\x18\x01 \x01(\x08\"5\n\x0b\x43hannelInfo\x12\x13\n\x0b\x63hannelName\x18\x01 \x01(\t\x12\x11\n\ttimeStamp\x18\x02 \x03(\x04\"y\n\nDeviceData\x12\x12\n\ndeviceType\x18\x01 \x01(\t\x12\x12\n\ndeviceName\x18\x02 \x01(\t\x12,\n\x0f\x63hannelInfoAttr\x18\x03 \x03(\x0b\x32\x13.common.ChannelInfo\x12\x15\n\rnumOfChannels\x18\x04 \x01(\x05\"V\n\x13\x44\x65vicesDataResponse\x12*\n\x0e\x64\x65viceDataInfo\x18\x01 \x03(\x0b\x32\x12.common.DeviceData\x12\x13\n\x0b\x64\x65viceCount\x18\x02 \x01(\x05\"\x83\x01\n\x0b\x44\x61taRequest\x12\x19\n\x11requiredTimestamp\x18\x01 \x01(\x04\x12\x1a\n\x12requestChannelName\x18\x02 \x01(\t\x12\x19\n\x11requestDeviceName\x18\x03 \x01(\t\x12\x10\n\x08\x66ileName\x18\x04 \x03(\t\x12\x10\n\x08uniqueId\x18\x05 \x01(\x04\"%\n\x0cServiceState\x12\x15\n\rserviceStatus\x18\x01 \x01(\tb\x06proto3')
)




_CONFIGREQUEST = _descriptor.Descriptor(
  name='ConfigRequest',
  full_name='common.ConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requestInputType', full_name='common.ConfigRequest.requestInputType', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=65,
)


_CONFIGRESPONSE = _descriptor.Descriptor(
  name='ConfigResponse',
  full_name='common.ConfigResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='recievedInputType', full_name='common.ConfigResponse.recievedInputType', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labelSchemaData', full_name='common.ConfigResponse.labelSchemaData', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labelCorrectorInfo', full_name='common.ConfigResponse.labelCorrectorInfo', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=163,
)


_DEVICESDATAREQUEST = _descriptor.Descriptor(
  name='DevicesDataRequest',
  full_name='common.DevicesDataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requiredDevicesData', full_name='common.DevicesDataRequest.requiredDevicesData', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=214,
)


_CHANNELINFO = _descriptor.Descriptor(
  name='ChannelInfo',
  full_name='common.ChannelInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channelName', full_name='common.ChannelInfo.channelName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timeStamp', full_name='common.ChannelInfo.timeStamp', index=1,
      number=2, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=216,
  serialized_end=269,
)


_DEVICEDATA = _descriptor.Descriptor(
  name='DeviceData',
  full_name='common.DeviceData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='deviceType', full_name='common.DeviceData.deviceType', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deviceName', full_name='common.DeviceData.deviceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channelInfoAttr', full_name='common.DeviceData.channelInfoAttr', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='numOfChannels', full_name='common.DeviceData.numOfChannels', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=271,
  serialized_end=392,
)


_DEVICESDATARESPONSE = _descriptor.Descriptor(
  name='DevicesDataResponse',
  full_name='common.DevicesDataResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='deviceDataInfo', full_name='common.DevicesDataResponse.deviceDataInfo', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deviceCount', full_name='common.DevicesDataResponse.deviceCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=394,
  serialized_end=480,
)


_DATAREQUEST = _descriptor.Descriptor(
  name='DataRequest',
  full_name='common.DataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requiredTimestamp', full_name='common.DataRequest.requiredTimestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requestChannelName', full_name='common.DataRequest.requestChannelName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requestDeviceName', full_name='common.DataRequest.requestDeviceName', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fileName', full_name='common.DataRequest.fileName', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uniqueId', full_name='common.DataRequest.uniqueId', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=483,
  serialized_end=614,
)


_SERVICESTATE = _descriptor.Descriptor(
  name='ServiceState',
  full_name='common.ServiceState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serviceStatus', full_name='common.ServiceState.serviceStatus', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=616,
  serialized_end=653,
)

_DEVICEDATA.fields_by_name['channelInfoAttr'].message_type = _CHANNELINFO
_DEVICESDATARESPONSE.fields_by_name['deviceDataInfo'].message_type = _DEVICEDATA
DESCRIPTOR.message_types_by_name['ConfigRequest'] = _CONFIGREQUEST
DESCRIPTOR.message_types_by_name['ConfigResponse'] = _CONFIGRESPONSE
DESCRIPTOR.message_types_by_name['DevicesDataRequest'] = _DEVICESDATAREQUEST
DESCRIPTOR.message_types_by_name['ChannelInfo'] = _CHANNELINFO
DESCRIPTOR.message_types_by_name['DeviceData'] = _DEVICEDATA
DESCRIPTOR.message_types_by_name['DevicesDataResponse'] = _DEVICESDATARESPONSE
DESCRIPTOR.message_types_by_name['DataRequest'] = _DATAREQUEST
DESCRIPTOR.message_types_by_name['ServiceState'] = _SERVICESTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConfigRequest = _reflection.GeneratedProtocolMessageType('ConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGREQUEST,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.ConfigRequest)
  ))
_sym_db.RegisterMessage(ConfigRequest)

ConfigResponse = _reflection.GeneratedProtocolMessageType('ConfigResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGRESPONSE,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.ConfigResponse)
  ))
_sym_db.RegisterMessage(ConfigResponse)

DevicesDataRequest = _reflection.GeneratedProtocolMessageType('DevicesDataRequest', (_message.Message,), dict(
  DESCRIPTOR = _DEVICESDATAREQUEST,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.DevicesDataRequest)
  ))
_sym_db.RegisterMessage(DevicesDataRequest)

ChannelInfo = _reflection.GeneratedProtocolMessageType('ChannelInfo', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELINFO,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.ChannelInfo)
  ))
_sym_db.RegisterMessage(ChannelInfo)

DeviceData = _reflection.GeneratedProtocolMessageType('DeviceData', (_message.Message,), dict(
  DESCRIPTOR = _DEVICEDATA,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.DeviceData)
  ))
_sym_db.RegisterMessage(DeviceData)

DevicesDataResponse = _reflection.GeneratedProtocolMessageType('DevicesDataResponse', (_message.Message,), dict(
  DESCRIPTOR = _DEVICESDATARESPONSE,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.DevicesDataResponse)
  ))
_sym_db.RegisterMessage(DevicesDataResponse)

DataRequest = _reflection.GeneratedProtocolMessageType('DataRequest', (_message.Message,), dict(
  DESCRIPTOR = _DATAREQUEST,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.DataRequest)
  ))
_sym_db.RegisterMessage(DataRequest)

ServiceState = _reflection.GeneratedProtocolMessageType('ServiceState', (_message.Message,), dict(
  DESCRIPTOR = _SERVICESTATE,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:common.ServiceState)
  ))
_sym_db.RegisterMessage(ServiceState)


# @@protoc_insertion_point(module_scope)
